<?php
// ОПЕРАТОР СТРОКИ

//Оператор строки, также известный как оператор конкатенации, позволяет нам соединить две строки вместе. Строки должны быть объединены по разным причинам, например, для ввода переменной или даже для разделения длинной строки, чтобы она была более читабельной в вашей среде IDE.

//Взглянем на нижний код


echo "Я устал писать статьи";
echo "Я уже хочу стажироваться";

//Данные две строки кода, выведут нам их в браузер, но проблема в том, что вот я забыл добавить пробел в конце первой строчки кода в кавчках, либо в начале текста второй строки в кавчках, и все, наш код просто стал месивом букв, две строки соединились в одну длинную, без разделения. 

//Мы также можем разделить строку с помощью оператора конкатенации и получить столько строк, сколько в ней символов.



//Одно замечание, когда вы разбиваете строку: помните пробелы. Они могут очень быстро потеряться.


echo "<div>" . "Привет" . "там" . "</div>"; // Выведет нам Приветтам, как в примере выше
echo "<div>" . "Привет " . "там" . "</div>"; // Выведет нам Привет там, так как в конце первой строки, я добавил пробел прямо в кавычках

//"<div>" . что то . "<div>" не забывай про дивы, и точку между чем то и дивом, без нее будет ошибка

//Мы также можем конкатенировать переменные в строки. Например создать переменные, у которых значения будут строками, и после уже выводить сами переменные с помощью конкатанации, ДИВОВ и переменных в которых заключено значение = строка
//Вот так

$year = 2011;
$make = "MINI";
$model = "Copper";

echo "<div>" . $year . ' ' . $make . ' ' . $model . "</div>"; // Тут добавлены Кавычки, и на первый взгляд они пустые, но это НЕ ТАК, внутри них пробел, без них, у нас вновь будет каща в выводе, также ДИВ, чтобы на новой строке все было красиво, данный код выведет значения наших переменных в одну строку и с пробелами, получится : 2011 MINI Coopper

//Возможно, вы видели оператор точки в других объектно-ориентированных языках программирования, таких как Java. Оператор точки в этих языках позволяет вам обращаться к методам и атрибутам объекта. Большинство этих языков объединяют две строки с помощью оператора +. В PHP мы используем оператор стрелки -> для доступа к методам и атрибутам объекта и используем оператор конкатенации (.) для конкатенации двух строк.


//КОНЕЦ СТАТЬИ




































?>