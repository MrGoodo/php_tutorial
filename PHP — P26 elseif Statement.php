<?php
// elseif оператор


//elseif оператор, нужен для того, чтобы использовать при более двух исходов при принятии решения. Ключевое слово elseif находится между ключевыми словами if и else. Основное условие обрабатывается оператором if, если условие выполняется внутри оператора if, то и смысла проверять какие либо из других условий, нет. Код внутри тела оператора if выполнеяется, а остальные операторы elseif/else - пропускаются.

//Если же условие if не выполняется, PHP, проверяет оператор elseif и если же он верен, нашему условию, то код уже внутри конкретно этого оператора, выполняется, и php пропустит оставшуюся часть проверки ekseif/else.

// Если никакие из условий не выполняются, то php переходит к телу оператора else, и выполняет его.

// if/elseif/else выглядит вот так.

if (Условное выражение){
    выражение
} elseif (Условное выражение){
    выражение
} else {
    выражение
}

// Это просто быстрый пример, для вашего понимания.

//Если мы сделаем все по правилам и корректно, то только одно из выражений будет выполнено внутри if/elseif/else

$car = "Mini";

if ($car == "BMW"){
    echo "wow, nice nice";
} elseif ($car == "Subaru"){
    echo "wow, Subaru? nice";
}elseif ($car == "Mini"){
    echo "Mini the best mf"; 
} else {
    Echo "i am sorry, little one";
}



/*
Вот что делает php, при просмотре данного кода.

1. PHP присваивает значение Mini переменной $car .
2. PHP видит оператор if. Он проверяет, равно ли значение из переменной $car, тому значению, что у нас в условном выражении оператора if, в условном выражении, оно равно BMW. Поскольку $car не ровняется BMW, он переходит к оператору elseif.
3. Он проверяет, равно ли значение, хранящееся внутри переменной $car , значению Subaru. Поскольку это не так, он переходит к следующему утверждению.
4. PHP проверяет, равно ли значение, хранящееся внутри переменной $car , значению Mini. Они равны.
5. PHP выполняет код внутри этого оператора elseif . PHP выводит текст: "Mini the best mf".
6. Он пропускает оператор else , так как он уже нашел совпадение.
*/
//Конец
















?>